@startuml

title __INTERACTORS's Class Diagram__\n

  namespace com.architectica.socialcomponents {
    namespace main.interactors {
      class com.architectica.socialcomponents.main.interactors.CommentInteractor {
          {static} - TAG : String
          - context : Context
          {static} - instance : CommentInteractor
          + createComment()
          + decrementCommentsCount()
          + getCommentsList()
          {static} + getInstance()
          + removeComment()
          + removeCommentsByPost()
          + updateComment()
          - CommentInteractor()
      }
    }
  }
  

  namespace com.architectica.socialcomponents {
    namespace main.interactors {
      class com.architectica.socialcomponents.main.interactors.FollowInteractor {
          {static} - TAG : String
          - context : Context
          {static} - instance : FollowInteractor
          + followUser()
          + getFollowersCount()
          + getFollowersList()
          + getFollowingPosts()
          + getFollowingsCount()
          + getFollowingsList()
          {static} + getInstance()
          + isFollowingExist()
          + unfollowUser()
          - FollowInteractor()
          - addFollower()
          - addFollowing()
          - getFollowersRef()
          - getFollowingsRef()
          - removeFollower()
          - removeFollowing()
      }
    }
  }
  

  namespace com.architectica.socialcomponents {
    namespace main.interactors {
      class com.architectica.socialcomponents.main.interactors.PostInteractor {
          ~ adminUid : String
          {static} - TAG : String
          - context : Context
          {static} - instance : PostInteractor
          + addComplainToPost()
          + createOrUpdateLike()
          + createOrUpdatePost()
          + createOrUpdatePostWithImage()
          + createPost()
          + filterPostsByLikes()
          + generatePostId()
          + getAdminPostList()
          {static} + getInstance()
          + getMediumImageStorageRef()
          + getOriginImageStorageRef()
          + getPost()
          + getPostList()
          + getPostListByUser()
          + getSinglePost()
          + getSmallImageStorageRef()
          + hasCurrentUserLike()
          + hasCurrentUserLikeSingleValue()
          + incrementWatchersCount()
          + isPostExistSingleValue()
          + removeLike()
          + removeLikesByPost()
          + removePost()
          + removePost()
          + searchPostsByTitle()
          + subscribeToNewPosts()
          - PostInteractor()
          - getFilteredQuery()
          - getSearchQuery()
          - isPostValid()
          - parsePostList()
          - removeObjectsRelatedToPost()
      }
    }
  }
  

  namespace com.architectica.socialcomponents {
    namespace main.interactors {
      class com.architectica.socialcomponents.main.interactors.ProfileInteractor {
          {static} - TAG : String
          - context : Context
          {static} - instance : ProfileInteractor
          + addRegistrationToken()
          + createOrUpdateProfile()
          + createOrUpdateProfileWithImage()
          {static} + getInstance()
          + getProfile()
          + getProfileSingleValue()
          + isProfileExist()
          + removeRegistrationToken()
          + searchProfiles()
          + searchProfilesBySkill()
          + updateProfileLikeCountAfterRemovingPost()
          + updateRegistrationToken()
          - ProfileInteractor()
          - getSearchQuery()
      }
    }
  }
  

  com.architectica.socialcomponents.main.interactors.CommentInteractor o-- com.architectica.socialcomponents.managers.DatabaseHelper : databaseHelper
  com.architectica.socialcomponents.main.interactors.FollowInteractor o-- com.architectica.socialcomponents.managers.DatabaseHelper : databaseHelper
  com.architectica.socialcomponents.main.interactors.PostInteractor o-- com.architectica.socialcomponents.managers.DatabaseHelper : databaseHelper
  com.architectica.socialcomponents.main.interactors.ProfileInteractor o-- com.architectica.socialcomponents.managers.DatabaseHelper : databaseHelper


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
